index.html:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Portfolio of Harsh Gupta, a Machine Learning Engineer specializing in AI solutions.">
    <meta name="keywords" content="Machine Learning, AI, Portfolio, Harsh Gupta">
    <title>Portfolio - Professional Bio</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <header>
        <h1>Hi, Iâ€™m Harsh Gupta</h1>
        <p class="tagline">Empowering Innovation with Machine Learning</p>
        <img src="profile.jpg" alt="Harsh Gupta, a Machine Learning Engineer with expertise in AI solutions" class="profile-photo">
    </header>

    <main>
        <section class="bio" aria-labelledby="bio-heading">
            <h2 id="bio-heading">About Me</h2>
            <p>I'm a passionate Machine Learning Engineer specializing in building scalable AI solutions. 
            From deploying AI-powered chatbots to enhancing financial forecasts, I aim to bridge the gap 
            between data and impactful decision-making.</p>
            <button id="explore-button" aria-label="Explore my projects">Explore My Projects</button>
        </section>

        <article id="projects" class="projects" aria-labelledby="projects-heading">
            <h2 id="projects-heading">Showcase of Projects</h2>
            <div class="project-grid">
                <div class="project-card">
                    <img src="project1-thumbnail.jpg" alt="Intelligent Surveillance System project thumbnail" class="project-thumbnail">
                    <h3>Intelligent Surveillance System</h3>
                    <p class="project-summary">A robust system for real-time anomaly detection using optimized CNN models.</p>
                    <p class="metrics">Impact: Reduced anomaly detection time by 15%.</p>
                    <button class="details-button" data-url="https://github.com/yourusername/project1" aria-label="View details of Intelligent Surveillance System">Details</button>
                </div>
                <!-- Add more project cards as needed -->
            </div>
        </article>

        <section id="skills" class="skills" aria-labelledby="skills-heading">
            <h2 id="skills-heading">Technical Skills</h2>
            <div class="skill-category">
                <h3>Programming Languages</h3>
                <canvas id="programming-skills-chart" width="400" height="200"></canvas>
            </div>
            <div class="skill-category">
                <h3>Frameworks</h3>
                <canvas id="frameworks-skills-chart" width="400" height="200"></canvas>
            </div>
            <div class="skill-category">
                <h3>Tools</h3>
                <canvas id="tools-skills-chart" width="400" height="200"></canvas>
            </div>
        </section>
    </main>

    <footer aria-labelledby="footer-heading">
        <h2 id="footer-heading" class="visually-hidden">Footer</h2> <!-- Visually hidden for screen readers -->
        <p>&copy; 2024 Harsh Gupta. All rights reserved.</p>
    </footer>

    <script src="script.js" defer></script>
</body>
</html>

style.css:
:root {
    --primary-color: #007BFF; /* Main color for buttons and highlights */
    --secondary-color: #0056b3; /* Darker shade for hover effects */
    --background-color: #f4f4f4; /* Light background color */
    --text-color: #333; /* Standard text color */
    --header-bg-color: #ffffff; /* Header background color */
    --card-bg-color: #ffffff; /* Project card background color */
    --shadow-color: rgba(0, 0, 0, 0.1); /* Shadow color for elements */
}

body {
    font-family: 'Arial', 'Helvetica', sans-serif;
    margin: 0;
    padding: 0;
    background-color: var(--background-color);
    color: var(--text-color);
}

header {
    text-align: center;
    padding: 60px 20px; /* Increased padding for a more spacious feel */
    background-color: var(--header-bg-color);
    box-shadow: 0 4px 10px var(--shadow-color); /* Subtle shadow for depth */
}

.tagline {
    font-size: 1.3em; /* Slightly larger tagline for emphasis */
    color: var(--primary-color);
}

.profile-photo {
    width: 150px;
    height: auto;
    border-radius: 50%;
    margin-top: 20px;
}

main {
    max-width: 1200px; /* Limit the width of the main content */
    margin: auto; /* Center align main content */
}

.bio {
    max-width: 800px;
    margin: 40px auto; /* Increased margin for better spacing */
    padding: 30px;
    background-color: var(--card-bg-color);
    box-shadow: 0 4px 15px var(--shadow-color);
    border-radius: 8px; /* Rounded corners for a modern look */
}

.bio p {
    font-size: 1.1em;
}

button {
    display: inline-block;
    padding: 12px 25px; /* Increased padding for a more substantial button */
    font-size: 16px;
    color: #ffffff;
    background-color: var(--primary-color);
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.2s ease; /* Smooth transitions */
}

button:hover {
    background-color: var(--secondary-color);
    transform: translateY(-2px); /* Slight lift effect on hover */
}

footer {
    text-align: center;
    padding: 25px;
}

.projects {
    padding: 60px 20px; /* Increased padding for projects section */
}

.project-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 30px; /* Increased gap between project cards */
}

.project-card {
    background-color: var(--card-bg-color);
    border-radius: 8px;
    box-shadow: 0 4px 15px var(--shadow-color);
    overflow: hidden;
    transition: transform 0.3s ease, box-shadow 0.3s ease; /* Smooth transitions */
}

.project-card:hover {
    transform: translateY(-5px); /* Lift effect on hover */
}

.project-thumbnail {
    width: 100%;
    height: auto;
}

.project-summary {
    font-size: 1em;
    margin: 15px; /* Adjusted margin for better spacing */
}

.metrics {
    font-weight: bold;
    color: var(--primary-color);
}

.details-button {
    margin-bottom: 15px; /* Added bottom margin for spacing */
}

.skills {
    padding: 60px 20px; /* Increased padding for skills section */
}

.skill-category {
    margin-bottom: 40px; /* Increased bottom margin for better separation */
}

.skill-category h3 {
    margin-bottom: 15px;
    color: var(--primary-color);
}

/* Responsive Design Enhancements */

@media (max-width: 768px) {
   header {
       padding-top: 40px; 
       padding-bottom: 40px; 
   }
   .bio, .projects, .skills {
       padding-left: 15px; 
       padding-right: 15px; 
   }
   button {
       width: calc(100% - 30px); /* Full width buttons on mobile */
   }
}

script.js:
// Function to initialize event listeners
function initEventListeners() {
    document.getElementById('explore-button').addEventListener('click', scrollToProjects);
    
    const detailButtons = document.querySelectorAll('.details-button');
    detailButtons.forEach(button => {
        button.addEventListener('click', openProjectDetails);
    });
}

// Smoothly scroll to the projects section
function scrollToProjects() {
    document.getElementById('projects').scrollIntoView({ behavior: 'smooth' });
}

// Open project details in a new tab
function openProjectDetails(event) {
    const url = event.currentTarget.getAttribute('data-url');
    window.open(url, '_blank'); // Open the URL in a new tab
}

// Load Chart.js library and initialize charts
function loadCharts() {
    const script = document.createElement('script');
    script.src = 'https://cdn.jsdelivr.net/npm/chart.js';
    script.onload = initializeCharts; // Call initializeCharts once the script loads
    document.head.appendChild(script);
}

// Initialize all charts after Chart.js is loaded
function initializeCharts() {
    createChart('programming-skills-chart', ['Python', 'JavaScript', 'SQL'], [90, 80, 70]);
    createChart('frameworks-skills-chart', ['TensorFlow', 'PyTorch', 'FastAPI'], [85, 75, 80]);
    createChart('tools-skills-chart', ['Docker', 'Kubernetes', 'AWS'], [80, 70, 75]);
}

// Create a chart with given parameters
function createChart(canvasId, labels, data) {
    const ctx = document.getElementById(canvasId).getContext('2d');
    
    new Chart(ctx, {
        type: 'bar',
        data: {
            labels: labels,
            datasets: [{
                label: 'Proficiency Level (%)',
                data: data,
                backgroundColor: generateColors(data.length),
                borderColor: generateBorderColors(data.length),
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true,
                    max: 100,
                    title: {
                        display: true,
                        text: 'Proficiency Level (%)'
                    }
                }
            }
        }
    });
}

// Generate an array of colors for chart bars
function generateColors(count) {
    const colors = [
        'rgba(54, 162, 235, 0.2)',
        'rgba(255, 99, 132, 0.2)',
        'rgba(75, 192, 192, 0.2)',
        'rgba(255, 206, 86, 0.2)',
        'rgba(153, 102, 255, 0.2)',
        'rgba(255, 159, 64, 0.2)'
    ];
    
    return colors.slice(0, count);
}

// Generate an array of border colors for chart bars
function generateBorderColors(count) {
    const colors = [
        'rgba(54, 162, 235, 1)',
        'rgba(255, 99, 132, 1)',
        'rgba(75, 192, 192, 1)',
        'rgba(255, 206, 86, 1)',
        'rgba(153, 102, 255, 1)',
        'rgba(255, 159, 64, 1)'
    ];
    
    return colors.slice(0, count);
}

// Initialize all functionality on DOMContentLoaded
document.addEventListener('DOMContentLoaded', () => {
    initEventListeners();
    loadCharts();
});